openapi: 3.1.0
info:
  title: Loopyti Image Actions
  version: "1.0.0"
  description: |
    REST endpoints that wrap the helper scripts stored in this repository for
    post-processing, resizing, and automatically cropping PNG assets generated
    by creative tools.
servers:
  - url: https://raw.githubusercontent.com/loopyti/gpt-test/main/API
    description: Legacy static scripts (Python/TypeScript) for GPT sandbox usage.
  - url: https://YOUR_PROJECT.supabase.co/functions/v1
    description: Supabase Edge Functions providing hosted image processing APIs.
paths:
  /postprocess-images:
    post:
      operationId: postprocessImages
      tags:
        - images
      summary: Convert raw base64 image payloads into optimized, auto-cropped PNG payloads.
        description: |
          Consumes raw image outputs (OpenAI `b64_json` objects or data-URL
          strings), trims transparent padding (with optional extra padding),
          rescales each so its longest side is the requested dimension, embeds
          300&nbsp;DPI metadata, and responds with Base64-encoded PNGs (no
          Supabase Storage writes).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostprocessImagesRequest"
            example:
              images:
                - b64_json: "<base64>"
                - "data:image/png;base64,<base64>"
      responses:
        "200":
          description: JSON payload containing the processed PNGs as Base64 strings.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostprocessImagesResponse"
        "400":
          description: Returned if none of the provided items can be decoded.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /resize-images:
    post:
      operationId: resizeImages
      tags:
        - images
      summary: Create alternate sizes for the last batch of processed images.
        description: |
          Resizes inline Base64/data-URL payloads by a provided scale factor and
          returns Base64-encoded PNGs with embedded DPI metadata.
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResizeImagesRequest"
              example:
              images:
                - "data:image/png;base64,<base64>"
                - b64_json: "<base64>"
              factor: 1.5
              selectedIndices: [1]
      responses:
        "200":
          description: JSON payload describing the resized images (Base64-encoded PNGs).
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResizeImagesResponse"
        "400":
          description: Returned when no valid input images were provided.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    ImageInput:
      description: >-
        PNG payload provided either as an OpenAI-style dictionary or a
        base64-encoded `data:image/...` URL string.
      oneOf:
        - type: object
          required:
            - b64_json
          properties:
            b64_json:
              type: string
              format: byte
              description: Base64-encoded PNG content as returned by OpenAI image APIs.
        - type: string
          description: >-
            A `data:image/...;base64,` URL string containing PNG image data.
    PostprocessImagesRequest:
      type: object
      required:
        - images
      properties:
        images:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/ImageInput"
        targetMaxDimension:
          type: integer
          minimum: 1
          default: 2048
        targetDpi:
          type: integer
          minimum: 72
          default: 300
        autocropPadding:
          type: integer
          minimum: 0
          default: 0
          description: Extra pixels of padding to preserve around the detected crop bounds.
    ResizeImagesRequest:
      type: object
      required:
        - images
      properties:
        images:
          type: array
          items:
            $ref: "#/components/schemas/ImageInput"
          description: Images provided inline as base64/data-URL payloads.
        selectedIndices:
          type: array
          items:
            type: integer
            minimum: 1
          description: >-
            Optional 1-based indices specifying which of the provided inputs (in the
            order they appear) should be resized. When omitted, all supplied images
            are processed.
        factor:
          type: number
          default: 2.0
          minimum: 0.1
          maximum: 8.0
          description: Scale multiplier applied to each image (clamped between 0.1x and 8x).
        targetDpi:
          type: integer
          minimum: 72
          default: 300
    PostprocessImagesResponse:
      type: object
      properties:
        message:
          type: string
        targetMaxDimension:
          type: integer
        targetDpi:
          type: integer
        autocropPadding:
          type: integer
        images:
          type: array
          items:
            $ref: "#/components/schemas/PostprocessedImage"
    ResizeImagesResponse:
      type: object
      properties:
        message:
          type: string
        factor:
          type: number
        targetDpi:
          type: integer
        images:
          type: array
          items:
            $ref: "#/components/schemas/ResizedImage"
    PostprocessedImage:
      type: object
      properties:
        base64:
          type: string
          format: byte
          description: Base64-encoded PNG (without a data-URL prefix).
        dataUrl:
          type: string
          format: uri
          description: Convenience `data:image/png;base64,...` representation of the PNG.
        width:
          type: integer
        height:
          type: integer
        originalIndex:
          type: integer
        cropBounds:
          type: object
          properties:
            left:
              type: integer
            top:
              type: integer
            right:
              type: integer
            bottom:
              type: integer
        croppedWidth:
          type: integer
        croppedHeight:
          type: integer
    ResizedImage:
      type: object
      properties:
        base64:
          type: string
          format: byte
          description: Base64-encoded PNG (without a data-URL prefix).
        dataUrl:
          type: string
          format: uri
          description: Convenience `data:image/png;base64,...` representation of the PNG.
        width:
          type: integer
        height:
          type: integer
        originalIndex:
          type: integer
          minimum: 1
          description: Original 1-based index of the source image in the request payload.
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
